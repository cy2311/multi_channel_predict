==========================================
DECODE网络训练 - 100 样本
开始时间: 2025年 07月 27日 星期日 16:27:47 CST
样本数: 100
训练轮数: 100
批处理大小: 4
学习率: 1e-4
GPU设备: 0
数据目录: /home/guest/Others/DECODE_rewrite/simulation_zmap2tiff/outputs_100samples_256
输出目录: /home/guest/Others/DECODE_rewrite/neuronal_network/training/outputs/train_100samples_20250727_162747
SLURM Job ID: 58
==========================================
启动TensorBoard在端口: 6106
TensorBoard PID: 3138558
开始训练...
开始训练DECODE网络:
  数据目录: /home/guest/Others/DECODE_rewrite/simulation_zmap2tiff/outputs_100samples_256
  样本数量: 100
  训练轮数: 100
  批次大小: 4
  学习率: 0.0001
  输出目录: /home/guest/Others/DECODE_rewrite/neuronal_network/training/outputs/train_100samples_20250727_162747

创建数据加载器...
训练样本: 80, 验证样本: 20
找到 80 个有效样本
总共 5280 个训练样本
找到 20 个有效样本
总共 1320 个训练样本
训练批次: 1320, 验证批次: 330
使用设备: cuda
模型参数数量:
  第一级网络: 19,612,656
  第二级网络: 6,660,547
开始训练，共 100 个epoch
训练 Epoch 1:   0%|          | 0/1320 [00:00<?, ?it/s]训练 Epoch 1:   0%|          | 0/1320 [00:05<?, ?it/s]
Traceback (most recent call last):
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/training/start_training.py", line 81, in <module>
    main()
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/training/start_training.py", line 74, in main
    train_main()
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/training/train_decode_network.py", line 407, in main
    trainer.train(train_loader, val_loader)
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/training/train_decode_network.py", line 331, in train
    train_losses = self.train_epoch(train_loader)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/training/train_decode_network.py", line 227, in train_epoch
    first_features, second_outputs = self.forward_pass(frames)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/training/train_decode_network.py", line 154, in forward_pass
    first_features = self.first_level_net(frames)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/models/first_level_unets.py", line 140, in forward
    feat2 = self.unet2(frame2)  # (B, 48, H, W)
            ^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/models/first_level_unets.py", line 106, in forward
    x = self.up1(x, skip1)
        ^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/models/first_level_unets.py", line 61, in forward
    x = self.conv(x)
        ^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/Others/DECODE_rewrite/neuronal_network/models/first_level_unets.py", line 29, in forward
    return self.block(x)
           ^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/container.py", line 240, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py", line 193, in forward
    return F.batch_norm(
           ^^^^^^^^^^^^^
  File "/home/guest/anaconda3/lib/python3.11/site-packages/torch/nn/functional.py", line 2822, in batch_norm
    return torch.batch_norm(
           ^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 48.00 MiB. GPU 0 has a total capacity of 23.60 GiB of which 7.56 MiB is free. Process 3125744 has 6.85 GiB memory in use. Process 3129411 has 6.85 GiB memory in use. Process 3133789 has 6.85 GiB memory in use. Including non-PyTorch memory, this process has 3.00 GiB memory in use. Of the allocated memory 2.61 GiB is allocated by PyTorch, and 102.01 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
==========================================
训练完成时间: 2025年 07月 27日 星期日 16:27:56 CST
训练退出码: 1
正在清理TensorBoard进程...
==========================================
训练脚本执行完成
TensorBoard访问地址: http://your_server:6106
输出目录: /home/guest/Others/DECODE_rewrite/neuronal_network/training/outputs/train_100samples_20250727_162747
==========================================
